

요구사항
1. 게시판
2. 회원(인증)
3. 부가 기능(맵, 차트 등..)


	- JSP Model 2 (MVC)


패키지 구조
- "com.test.tworavel"					> 메인
- "com.test.toy.board"					> 게시판(자유)

- "com.test.toy.member"					> 회원
										
- "com.test.toy.admin"					> 관리자
- "com.test.toy.etc"					> 부가 기능..

폴더 구조
- webapp > WEB-INF	> "view"		: 뷰 루트(com.test.toy 에 대응)
						> "board"	: 게시판
						> "member"	: 회원
						> "admin"	: 관리자
						> "etc"		: 부가 기능
						
- webapp > WEB-INF > "inc"			: 조각 페이지

- webapp > "asset"
			> "css"					: CSS
			> "js"					: JavaScript
			> "pic"					: 회원 프로필 사진
			> "files"				: 첨부 파일
			
라이브러리
- webapp > WEB-INF > lib
						- ojdbc6.jar
						- jstl-1.2.jar
						- lombok.jar
						- cos.jar
						- mylibrary.jar
						- json-simple.jar
						
			
기본 템플릿 페이지 + 공통 파일
- com.test.toy > "Template.java"
- views > "template.jsp"

- webapp > asset > css > "toy.css"			: 공용 CSS
				 > js  > "toy.js"			: 공용 JavaScript
- webapp > WEB-INF > inc > "asset.jsp"		: 조각 페이지 + jQuery + FontAwesome
						 > "header.jsp"


작업 순서
1. [시작 페이지]
- com.test.toy > "Index.java"
- views > "index.jsp"


2. [회원 가입]
- com.test.toy.member > "Register.java"
					  > "RegisterOk.java"
- views > member > "register.jsp"

- com.test.toy.member > "MemberDAO.java"
					  > "MemberDTO.java"


3. [로그인, 로그아웃]
- com.test.toy.member > "Login.java"
					  > "LoginOk.java"
					  > "LogoutOk.java"
- views > member > "login.jsp"


4. [회원 탈퇴]
- com.test.toy.member > "Unregister.java"
					  > "UnregisterOk.java"
- views > member > "unregister.jsp"


5. [회원 정보]
- com.test.toy.member > "Info.java"
- views > member > "info.jsp"


6. [게시판] > CRUD
- com.test.toy.board > "BoardDAO.java"
					 > "BoardDTO.java"
					 > "List.java"
					 > "Add.java"
					 > "AddOk.java"
					 > "View.java"
					 > "Edit.java"
					 > "EditOk.java"
					 > "Del.java"
					 > "DelOk.java"
- views > board > "list.jsp"
				> "add.jsp"
				> "view.jsp"
				> "edit.jsp"
				> "del.jsp"


	-- > 여기까지 1시간~1시간 30분 컷 해야함
	
[게시판 > 검색]


[게시판 > 권한]
1. 목록보기 > 모두
2. 상세보기 > 모두
3. 글쓰기 	> 회원만
4. 수정하기	> 회원만 + 당사자
5. 삭제하기	> 회원만 + 당사자
6. 관리자 	> 모든 권한


[게시판 > 댓글]
- com.test.toy.board > "AddCommentOK.java"
					 > "EditCommentOK.java"
					 > "DelCommentOK.java"
					 > "CommentDTO.java"


[게시판 > 페이징]
- com.test.toy.board > "Dummy.java"


[게시판 > 답변형(계층형) 게시판]
- 테이블 수정 > thread, depth 컬럼 추가

- 알고리즘
- thread, depth 컬럼의 데이터 규칙
	1. 새글 쓰기
		a. 현존하는 모든 게시물 중에서 가장 큰 thread 값을 찾아서, 그 값에 +1000을 한 값을 새 글의 thread 값으로 사용
		b. 새글의 depth는 항상 0을 넣는다.
	
	2. 답변 글 쓰기
		a. 현존하는 모든 게시물의 thread 값을 대상으로, 현재 작성 중인 답변글의 부모글 thread 값보다 작고, 이전 새 글의 thread 값보다 큰 모든 thread를 찾아서 -1 한다.
		b. 현재 답변글의 thread 값은 부모글의 thread -1 을 넣는다.
		c. 현재 답변글의 depth 값은 부모글의 depth +1 을 넣는다.



[게시판 - 해시태그]
- 카테고리
- 검색



[차트]
- 데이터 연동 + 출력
- com.test.toy.admin > "Chart.java"
					 > "AdminDAO.java"
					 > "ChartDTO.java"

- views > admin > "chart.jsp"



[지도]
- com.test.toy.etc > "Ex01.java"
				   > "MapDAO.java"
				   > "MapDTO.java"
				   > "AddPlace.java"

- views > etc > "ex01.jsp"
- views > etc > "ex02.jsp"

- 구글맵, 네이버지도, 카카오맵(다음) .. >  Open API



[게시판 - 파일 업로드]
























